program permutation ;  uses wincrt;  const    Max = 4;    type    element = char;    elementlist = array[1..Max] of element;  var    a: elementlist;    i: integer;  { generate all the permutations of a[x..n] }  procedure perm(a: elementlist; x,n: integer);    var      b: element;      j: integer;    BEGIN      if x = n then { write the permutation }        BEGIN          for j := 1 to n do            write(a[j]);          writeln;        END      else        BEGIN { If a[x..n] has more than one permutation.                 then they will be created recursively. }          for j := x to n do            BEGIN { swap a[j] and a[x] }              b := a[x];              a[x] := a[j];              a[j] := b;              perm(a, x+1, n); { create permutations of a[x+1..n] }            END;        END;    END;  { private proc perm }             BEGIN    for i:= 1 to Max do      a[i] := char(96+i);    perm(a, 1, Max);  END.